// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Departamento {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(100)
  codigo String @unique @db.VarChar(15)

  cargos Cargo[]

  @@map("departamentos")
}

model Cargo {
  id                 Int    @id @default(autoincrement())
  nombre             String @db.VarChar(100)
  codigo             String @unique @db.VarChar(15)
  codigoDepartamento String @db.VarChar(15)

  departamento Departamento @relation(fields: [codigoDepartamento], references: [codigo])
  empleados    Empleado[]

  @@map("cargos")
}

model Profesion {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(100)
  codigo String @unique @db.VarChar(15)

  empleados Empleado[]

  @@map("profesiones")
}

model GradoInstruccion {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(100)
  codigo String @unique @db.VarChar(15)

  empleados Empleado[]

  @@map("grados_instruccion")
}

enum GeneroEnum {
  MASCULINO
  FEMENINO
}

enum EstadoCivilEnum {
  SOLTERO
  CASADO
  DIVORCIADO
  VIUDO
  CONCUBINO
}

model Empleado {
  id                     Int             @id @default(autoincrement())
  nombre                 String          @db.VarChar(100)
  apellido               String          @db.VarChar(100)
  ci                     String          @unique @db.VarChar(15)
  nacionalidad           String          @db.VarChar(100)
  genero                 GeneroEnum      @default(MASCULINO)
  fechaNacimiento        DateTime        @map("fecha_nacimiento") @db.Date
  ciudadNacimiento       String          @map("ciudad_nacimiento") @db.VarChar(100)
  estadoCivil            EstadoCivilEnum @map("estado_civil")
  cantidadHijos          Int             @default(0) @map("cantidad_hijos")
  fechaIngreso           DateTime        @map("fecha_ingreso") @db.Date
  codigoCargo            String          @map("codigo_cargo") @db.VarChar(15)
  codigoGradoInstruccion String          @map("codigo_grado_instruccion") @db.VarChar(15)
  codigoProfesion        String          @map("codigo_profesion") @db.VarChar(15)
  correo                 String          @unique @db.VarChar(100)
  telefono               String          @db.VarChar(15)
  telefonoFijo           String?         @map("telefono_fijo") @db.VarChar(15)
  activo                 Boolean         @default(true)

  profesion        Profesion        @relation(fields: [codigoProfesion], references: [codigo])
  gradoInstruccion GradoInstruccion @relation(fields: [codigoGradoInstruccion], references: [codigo])
  cargo            Cargo            @relation(fields: [codigoCargo], references: [codigo])

  @@map("empleados")
}
